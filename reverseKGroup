# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def reverseKGroup(self, head, k):
        """
        :type head: ListNode
        :type k: int
        :rtype: ListNode
        """
        current = head
        for i in range(k):
            if current == None:
                return head
            current = current.next
        
        prev = None
        current = head
        for i in range(k): # reverse k part of LinkedList
            next = current.next
            current.next = prev
            prev = current 
            current = next
        
        head.next = self.reverseKGroup(current, k)
        return prev
        
